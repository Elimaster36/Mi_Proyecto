{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/elias/Desktop/Unab-2024/Portafolio de Proyectos/SimplicityPhone/SimplicityPhone/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/auth\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/forms\";\nexport class RegisterPage {\n  constructor(afAuth, router, toastController) {\n    this.afAuth = afAuth;\n    this.router = router;\n    this.toastController = toastController;\n  }\n  register() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (!_this.isEmailValid(_this.email)) {\n        const toast = yield _this.toastController.create({\n          message: \"Correo electrónico inválido. Por favor, ingrese un correo válido.\",\n          duration: 3000\n        });\n        yield toast.present();\n        return;\n      }\n      try {\n        yield _this.afAuth.createUserWithEmailAndPassword(_this.email, _this.password);\n        const toast = yield _this.toastController.create({\n          message: \"Registro exitoso.\",\n          duration: 3000\n        });\n        yield toast.present();\n        _this.router.navigate([\"/login\"]);\n      } catch (error) {\n        const errorMessage = error.message;\n        const toast = yield _this.toastController.create({\n          message: errorMessage,\n          duration: 3000\n        });\n        yield toast.present();\n      }\n    })();\n  }\n  isEmailValid(email) {\n    const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    return regex.test(email);\n  }\n  static #_ = this.ɵfac = function RegisterPage_Factory(t) {\n    return new (t || RegisterPage)(i0.ɵɵdirectiveInject(i1.AngularFireAuth), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastController));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterPage,\n    selectors: [[\"app-register\"]],\n    decls: 20,\n    vars: 2,\n    consts: [[\"position\", \"floating\"], [\"type\", \"Nombre\"], [\"type\", \"email\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"password\", 3, \"ngModelChange\", \"ngModel\"], [\"color\", \"success\", \"expand\", \"full\", 3, \"click\"]],\n    template: function RegisterPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Registro\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-list\")(6, \"ion-item\")(7, \"ion-label\", 0);\n        i0.ɵɵtext(8, \"Nombre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"ion-input\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-item\")(11, \"ion-label\", 0);\n        i0.ɵɵtext(12, \"Correo Electr\\u00F3nico\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ion-input\", 2);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterPage_Template_ion_input_ngModelChange_13_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.email, $event) || (ctx.email = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"ion-item\")(15, \"ion-label\", 0);\n        i0.ɵɵtext(16, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ion-input\", 3);\n        i0.ɵɵtwoWayListener(\"ngModelChange\", function RegisterPage_Template_ion_input_ngModelChange_17_listener($event) {\n          i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n          return $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"ion-button\", 4);\n        i0.ɵɵlistener(\"click\", function RegisterPage_Template_ion_button_click_18_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵtext(19, \"Registrarse\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i4.NgControlStatus, i4.NgModel, i3.IonButton, i3.IonContent, i3.IonHeader, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonList, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor],\n    styles: [\"ion-list[_ngcontent-%COMP%] {\\n  --backgound: rgb(0, 195, 255);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIucGFnZS5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vUG9ydGFmb2xpbyUyMGRlJTIwUHJveWVjdG9zL1NpbXBsaWNpdHlQaG9uZS9TaW1wbGljaXR5UGhvbmUvc3JjL2FwcC9yZWdpc3Rlci9yZWdpc3Rlci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2QkFBQTtBQ0NGIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWxpc3Qge1xyXG4gIC0tYmFja2dvdW5kOiByZ2IoMCwgMTk1LCAyNTUpO1xyXG59XHJcbiIsImlvbi1saXN0IHtcbiAgLS1iYWNrZ291bmQ6IHJnYigwLCAxOTUsIDI1NSk7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["RegisterPage","constructor","afAuth","router","toastController","register","_this","_asyncToGenerator","isEmailValid","email","toast","create","message","duration","present","createUserWithEmailAndPassword","password","navigate","error","errorMessage","regex","test","_","i0","ɵɵdirectiveInject","i1","AngularFireAuth","i2","Router","i3","ToastController","_2","selectors","decls","vars","consts","template","RegisterPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵtwoWayListener","RegisterPage_Template_ion_input_ngModelChange_13_listener","$event","ɵɵtwoWayBindingSet","RegisterPage_Template_ion_input_ngModelChange_17_listener","ɵɵlistener","RegisterPage_Template_ion_button_click_18_listener","ɵɵadvance","ɵɵtwoWayProperty"],"sources":["C:\\Users\\elias\\Desktop\\Unab-2024\\Portafolio de Proyectos\\SimplicityPhone\\SimplicityPhone\\src\\app\\register\\register.page.ts","C:\\Users\\elias\\Desktop\\Unab-2024\\Portafolio de Proyectos\\SimplicityPhone\\SimplicityPhone\\src\\app\\register\\register.page.html"],"sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { AngularFireAuth } from \"@angular/fire/compat/auth\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ToastController } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"app-register\",\r\n  templateUrl: \"./register.page.html\",\r\n  styleUrls: [\"./register.page.scss\"],\r\n})\r\nexport class RegisterPage {\r\n  email!: string;\r\n  password!: string;\r\n\r\n  constructor(\r\n    private afAuth: AngularFireAuth,\r\n    private router: Router,\r\n    private toastController: ToastController\r\n  ) {}\r\n\r\n  async register() {\r\n    if (!this.isEmailValid(this.email)) {\r\n      const toast = await this.toastController.create({\r\n        message:\r\n          \"Correo electrónico inválido. Por favor, ingrese un correo válido.\",\r\n        duration: 3000,\r\n      });\r\n      await toast.present();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await this.afAuth.createUserWithEmailAndPassword(\r\n        this.email,\r\n        this.password\r\n      );\r\n      const toast = await this.toastController.create({\r\n        message: \"Registro exitoso.\",\r\n        duration: 3000,\r\n      });\r\n      await toast.present();\r\n      this.router.navigate([\"/login\"]);\r\n    } catch (error: unknown) {\r\n      const errorMessage = (error as { message: string }).message;\r\n      const toast = await this.toastController.create({\r\n        message: errorMessage,\r\n        duration: 3000,\r\n      });\r\n      await toast.present();\r\n    }\r\n  }\r\n\r\n  isEmailValid(email: string): boolean {\r\n    const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return regex.test(email);\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title>Registro</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-list>\r\n    <ion-item>\r\n      <ion-label position=\"floating\">Nombre</ion-label>\r\n      <ion-input type=\"Nombre\"></ion-input>\r\n    </ion-item>\r\n    <ion-item>\r\n      <ion-label position=\"floating\">Correo Electrónico</ion-label>\r\n      <ion-input [(ngModel)]=\"email\" type=\"email\"></ion-input>\r\n    </ion-item>\r\n    <ion-item>\r\n      <ion-label position=\"floating\">Contraseña</ion-label>\r\n      <ion-input [(ngModel)]=\"password\" type=\"password\"></ion-input>\r\n    </ion-item>\r\n  </ion-list>\r\n  <ion-button color=\"success\" expand=\"full\" (click)=\"register()\"\r\n    >Registrarse</ion-button\r\n  >\r\n</ion-content>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}